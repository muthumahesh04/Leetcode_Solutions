/*22. Generate Parentheses

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

Example 1:
Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]

Example 2:
Input: n = 1
Output: ["()"]
 

Constraints:
1 <= n <= 8
*/
class Solution {
    public List<String> generateParenthesis(int n) {

        List<String> paranthesis=new ArrayList<>();
        Generate_Paranthesis(paranthesis,"",0,0,n);
        return paranthesis;
    }
    public void Generate_Paranthesis(List<String> result,String str,int open,int close,int limit)
    {
        if(open>limit || close>open)
           return;
        if(open==limit && close==limit)
        {
            result.add(str);
            return;
        }
        Generate_Paranthesis(result,str+'(',open+1,close,limit);
        Generate_Paranthesis(result,str+')',open,close+1,limit);
    }
}
